{"version":3,"sources":["D:/happierday/client/src/$_gendir lazy","D:/happierday/client/src/app/app-routing.module.ts","D:/happierday/client/src/app/app.component.css","D:/happierday/client/src/app/app.component.html","D:/happierday/client/src/app/app.component.ts","D:/happierday/client/src/app/app.module.ts","D:/happierday/client/src/app/components/home/home.component.css","D:/happierday/client/src/app/components/home/home.component.html","D:/happierday/client/src/app/components/home/home.component.ts","D:/happierday/client/src/app/components/joke-detail/joke-detail.component.css","D:/happierday/client/src/app/components/joke-detail/joke-detail.component.html","D:/happierday/client/src/app/components/joke-detail/joke-detail.component.ts","D:/happierday/client/src/app/components/login/login.component.css","D:/happierday/client/src/app/components/login/login.component.html","D:/happierday/client/src/app/components/login/login.component.ts","D:/happierday/client/src/app/components/navbar/navbar.component.css","D:/happierday/client/src/app/components/navbar/navbar.component.html","D:/happierday/client/src/app/components/navbar/navbar.component.ts","D:/happierday/client/src/app/components/new-post/new-post.component.css","D:/happierday/client/src/app/components/new-post/new-post.component.html","D:/happierday/client/src/app/components/new-post/new-post.component.ts","D:/happierday/client/src/app/components/profile/profile.component.css","D:/happierday/client/src/app/components/profile/profile.component.html","D:/happierday/client/src/app/components/profile/profile.component.ts","D:/happierday/client/src/app/components/register/register.component.css","D:/happierday/client/src/app/components/register/register.component.html","D:/happierday/client/src/app/components/register/register.component.ts","D:/happierday/client/src/app/components/verify/verify.component.css","D:/happierday/client/src/app/components/verify/verify.component.html","D:/happierday/client/src/app/components/verify/verify.component.ts","D:/happierday/client/src/app/services/auth/auth-guard.service.ts","D:/happierday/client/src/app/services/auth/auth.service.ts","D:/happierday/client/src/app/services/auth/nonauth.service.ts","D:/happierday/client/src/app/services/jokes/jokes.service.ts","D:/happierday/client/src/app/services/login/login.service.ts","D:/happierday/client/src/app/services/newPost/new-post.service.ts","D:/happierday/client/src/app/services/profile/profile.service.ts","D:/happierday/client/src/app/services/signup/signup.service.ts","D:/happierday/client/src/environments/environment.ts","D:/happierday/client/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/happierday/client/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { VerifyComponent } from './components/verify/verify.component';\r\nimport { JokeDetailComponent } from './components/joke-detail/joke-detail.component';\r\nimport { NewPostComponent } from './components/new-post/new-post.component';\r\n\r\nimport { AuthGuardService } from './services/auth/auth-guard.service';\r\nimport { NonauthService } from './services/auth/nonauth.service';\r\n\r\nconst appRoutes: Routes = [\r\n    {\r\n        path:  'home',\r\n        component: HomeComponent\r\n    },\r\n    {\r\n        path: 'jokes/:title',\r\n        component: JokeDetailComponent\r\n    },\r\n    {\r\n        path: 'signup',\r\n        component: RegisterComponent,\r\n        canActivate: [NonauthService]\r\n    },\r\n    {\r\n        path: 'newpost',\r\n        component: NewPostComponent\r\n    },\r\n    {\r\n        path: 'logout',\r\n        redirectTo: ''\r\n    },\r\n    {\r\n        path: 'verify/:id',\r\n        component: VerifyComponent\r\n    },\r\n    {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n        canActivate: [NonauthService]\r\n    },\r\n    {\r\n        path: 'profile/:username',\r\n        component: ProfileComponent\r\n    },\r\n    {\r\n        path: '**',\r\n        redirectTo: '/home'\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(appRoutes,{useHash:true})\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class AppRoutingModule{\r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/happierday/client/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/happierday/client/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<app-navbar></app-navbar>\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/happierday/client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    title = 'app';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/happierday/client/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { VerifyComponent } from './components/verify/verify.component';\r\nimport { JokeDetailComponent } from './components/joke-detail/joke-detail.component';\r\nimport { NewPostComponent } from './components/new-post/new-post.component';\r\n\r\nimport { SignUpService } from './services/signup/signup.service';\r\nimport { LoginService } from './services/login/login.service';\r\nimport { AuthService } from './services/auth/auth.service';\r\nimport { AuthGuardService } from './services/auth/auth-guard.service';\r\nimport { NonauthService } from './services/auth/nonauth.service';\r\nimport { JokesService } from './services/jokes/jokes.service';\r\nimport { ProfileService } from './services/profile/profile.service';\r\nimport { NewPostService } from './services/newPost/new-post.service';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        NavbarComponent,\r\n        HomeComponent,\r\n        RegisterComponent,\r\n        LoginComponent,\r\n        ProfileComponent,\r\n        VerifyComponent,\r\n        JokeDetailComponent,\r\n        NewPostComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        BrowserAnimationsModule\r\n    ],\r\n    providers: [\r\n        SignUpService,\r\n        LoginService,\r\n        AuthService,\r\n        AuthGuardService,\r\n        NonauthService,\r\n        JokesService,\r\n        ProfileService,\r\n        NewPostService\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/happierday/client/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".jumbotron {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.card{\\r\\n    transition: 0.5s;\\r\\n    height: 15em;\\r\\n    margin-top: 1em;\\r\\n}\\r\\n\\r\\n.card:hover{\\r\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n}\\r\\n\\r\\n.alert{\\r\\n    margin-top: 1em;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/happierday/client/src/app/components/home/home.component.css\n// module id = ../../../../../src/app/components/home/home.component.css\n// module chunks = main","module.exports = \"<div class=\\\"jumbotron\\\">\\r\\n    <h1>Happierday</h1>\\r\\n    <p class=\\\"lead\\\">A place where you can share your happiness with other</p>\\r\\n    <p *ngIf=\\\"!authService.loggedIn()\\\">\\r\\n        <a class=\\\"btn btn-lg btn-success\\\" routerLink=\\\"/signup\\\" role=\\\"button\\\">Get started today</a>\\r\\n    </p>\\r\\n    <p *ngIf=\\\"authService.loggedIn()\\\">\\r\\n        <a class=\\\"btn btn-lg btn-success\\\" routerLink=\\\"/newpost\\\" role=\\\"button\\\">New Post</a>\\r\\n    </p>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6\\\" *ngFor=\\\"let joke of jokes\\\">\\r\\n        <div class=\\\"card text-center\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <h4 class=\\\"card-title\\\">{{ joke.title }}</h4>\\r\\n                <p class=\\\"card-text\\\">{{ joke.content.substring(0,joke.content.length/2)}}...</p>\\r\\n                <a routerLink=\\\"/jokes/{{joke.ref}}\\\" class=\\\"btn btn-primary\\\">View Detail</a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/happierday/client/src/app/components/home/home.component.html\n// module id = ../../../../../src/app/components/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { JokesService } from '../../services/jokes/jokes.service';\r\nimport { AuthService } from '../../services/auth/auth.service';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n    jokes;\r\n\r\n    constructor(\r\n        private jokesService: JokesService,\r\n        private authService: AuthService\r\n    ) { }\r\n\r\n\r\n\r\n    ngOnInit() {\r\n        this.jokesService.getJokes().subscribe((res) => {\r\n            this.jokes = JSON.parse(JSON.stringify(res));\r\n        })\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/happierday/client/src/app/components/home/home.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/happierday/client/src/app/components/joke-detail/joke-detail.component.css\n// module id = ../../../../../src/app/components/joke-detail/joke-detail.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card\\\" style=\\\"width: 50rem;\\\">\\r\\n    <div class=\\\"card-header bg-transparent\\\">{{ jokeDetail.title }}</div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <h4 class=\\\"card-title\\\">Success card title</h4>\\r\\n        <p class=\\\"card-text\\\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\\r\\n    </div>\\r\\n    <div class=\\\"card-footer bg-transparent\\\">Footer</div>\\r\\n</div>\\r\\n\\r\\n<!-- <div class = \\\"container\\\">\\r\\n    <p>Title: {{jokeDetail?.title}}</p>\\r\\n    <p>content: {{jokeDetail?.content}}</p>\\r\\n    <p>createdAt: {{jokeDetail?.createdAt}}</p>\\r\\n    <div *ngIf=\\\"!authStatus\\\">\\r\\n        <p>username: {{jokeDetail?.username}}</p>\\r\\n        <p>likes: {{jokeDetail?.likes}}</p>\\r\\n        <p>dislikes: {{jokeDetail?.dislikes}}</p>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Like</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\">Dislike</button>\\r\\n        <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#newComment\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseExample\\\">\\r\\n                New Comment\\r\\n            </button>\\r\\n            <div class=\\\"collapse\\\" id=\\\"newComment\\\">\\r\\n                <div class = \\\"jumbotron\\\">\\r\\n                    <div *ngIf=\\\"loggedIn\\\">\\r\\n                        <form [formGroup] = \\\"commentForm\\\" (submit) = \\\"creteNewComment()\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"comment\\\">comment</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName = \\\"comment\\\">\\r\\n                                <textarea class=\\\"form-control\\\"rows=\\\"5\\\" formControlName = \\\"content\\\"></textarea>\\r\\n                                <div *ngIf=\\\"commentForm.controls.comment.errors && commentForm.controls.comment.dirty\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"commentForm.controls.comment.errors?.required\\\">\\r\\n                                        comment is required.\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"commentForm.controls.comment.errors?.minlength && !commentForm.controls.comment.errors?.required\\\">\\r\\n                                        comment should have at least 5 characters.\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"commentForm.controls.comment.errors?.maxlength && !commentForm.controls.comment.errors?.required\\\">\\r\\n                                        comment should not exceed 1000 characters long.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <p>Character Left: {{1000-postForm.get('comment').value.length}}</p>\\r\\n                            <button type=\\\"submit\\\" [disabled] = \\\"commentForm.controls.comment.errors || !commentForm.controls.comment.dirty\\\"class=\\\"btn btn-success\\\">Post</button>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"!loggedIn\\\">\\r\\n                        Oops. It seems like you didn't log in.\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"authStatus\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Edit</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\">Delete</button>\\r\\n    </div>        \\r\\n</div> -->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/happierday/client/src/app/components/joke-detail/joke-detail.component.html\n// module id = ../../../../../src/app/components/joke-detail/joke-detail.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { JokesService } from '../../services/jokes/jokes.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl, FormGroup, FormBuilder , Validators} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-joke-detail',\r\n  templateUrl: './joke-detail.component.html',\r\n  styleUrls: ['./joke-detail.component.css']\r\n})\r\nexport class JokeDetailComponent implements OnInit {\r\n    jokeDetail;\r\n    response;\r\n    authStatus;\r\n    commentForm\r\n    constructor(\r\n        private router: Router,\r\n        private jokeService: JokesService,\r\n        private formBuilder: FormBuilder\r\n    ) { \r\n        this.createForm();\r\n    }\r\n     createForm(){\r\n        this.commentForm = this.formBuilder.group({\r\n            comment: ['',Validators.compose([\r\n                Validators.required,\r\n                Validators.minLength(5),\r\n                Validators.maxLength(1000)\r\n            ])]\r\n        })\r\n    }\r\n    ngOnInit() {\r\n        this.jokeService.getJokeDetail(this.router.url.split('/')[2]).subscribe((res) => {\r\n            this.response = JSON.parse(JSON.stringify(res));\r\n            this.jokeDetail = this.response.joke;\r\n            this.authStatus = this.response.auth;\r\n        })\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/happierday/client/src/app/components/joke-detail/joke-detail.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/happierday/client/src/app/components/login/login.component.css\n// module id = ../../../../../src/app/components/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"jumbotron\\\">\\r\\n        <h1 class= \\\"page-header\\\">Login</h1>\\r\\n\\r\\n        <div class = \\\"row  show-hide-message\\\">\\r\\n            <div [ngClass] =\\\"messageClass\\\">\\r\\n                {{ message }}\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <form [formGroup] = \\\"userForm\\\" (submit) = \\\"onLoginSubmit()\\\">\\r\\n            <div class=\\\"form-group\\\" >\\r\\n                <label for=\\\"username\\\" >Username</label>\\r\\n                <input type=\\\"text\\\"  id=\\\"username\\\" class=\\\"form-control\\\"  placeholder=\\\"username\\\" formControlName=\\\"username\\\"\\r\\n                [ngClass]=\\\"{'is-invalid':userForm.controls.username.errors&&userForm.controls.username.dirty,'is-valid':!userForm.controls.username.errors}\\\">\\r\\n                <div *ngIf=\\\"(userForm.controls.username.errors && userForm.controls.username.dirty)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"userForm.controls.username.errors?.required\\\">\\r\\n                        Userame is required.\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"password\\\">Password</label>\\r\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\"   placeholder=\\\"password\\\" formControlName=\\\"password\\\"\\r\\n                [ngClass]=\\\"{'is-invalid':userForm.controls.password.errors&&userForm.controls.password.dirty,'is-valid':!userForm.controls.password.errors}\\\">\\r\\n                <div *ngIf=\\\"userForm.controls.password.errors && userForm.controls.password.dirty\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"userForm.controls.password.errors?.required\\\">\\r\\n                        Password is required.\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <button [disabled] = \\\"!userForm.valid || logedIn\\\" type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/happierday/client/src/app/components/login/login.component.html\n// module id = ../../../../../src/app/components/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder , Validators} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from '../../services/login/login.service';\r\nimport { AuthGuardService } from '../../services/auth/auth-guard.service';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    userForm: FormGroup;\r\n    logedIn;\r\n    message;\r\n    messageClass;\r\n    response;\r\n    url;\r\n    state = 3;\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private router: Router,\r\n        private loginService: LoginService,\r\n        private authGuardService: AuthGuardService\r\n    ) { \r\n        this.logedIn = false;\r\n        this.createForm();\r\n    }\r\n\r\n    createForm(){\r\n        this.userForm = this.formBuilder.group({\r\n            username: ['', Validators.required],\r\n            password: ['', Validators.required],\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        \r\n    }\r\n\r\n    disableForm(){\r\n        this.userForm.controls['username'].disable();\r\n        this.userForm.controls['password'].disable();\r\n    }\r\n\r\n    enableForm(){\r\n        this.userForm.controls['username'].enable();\r\n        this.userForm.controls['password'].enable();\r\n    }\r\n\r\n    onLoginSubmit(){\r\n        this.logedIn = true;\r\n        this.disableForm();\r\n        const user = {\r\n            username: this.userForm.get('username').value,\r\n            password: this.userForm.get('password').value\r\n        }\r\n        this.loginService.Login(user).subscribe(res => {\r\n            this.response = JSON.parse(JSON.stringify(res));\r\n            this.message = this.response.message;\r\n            if(this.response.success){\r\n                this.messageClass = 'alert alert-success';\r\n                this.loginService.storeUser(this.response.token,user.username);\r\n                setTimeout(()=>{\r\n                    location.reload();\r\n                    if(this.url){\r\n                        this.router.navigate([this.url]);\r\n                    }else{\r\n                        this.router.navigate(['/home']);\r\n                    }   \r\n                },1000)\r\n            }else{\r\n                this.logedIn = false;\r\n                this.messageClass = 'alert alert-danger';\r\n                this.enableForm();\r\n            }\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/happierday/client/src/app/components/login/login.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"ul.nav li a, ul.nav li a:visited {\\r\\n    color: white;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/happierday/client/src/app/components/navbar/navbar.component.css\n// module id = ../../../../../src/app/components/navbar/navbar.component.css\n// module chunks = main","module.exports = \"<div class=\\\"navbar navbar-default navbar-expand-lg navbar-dark navbar-static-top bg-success nav-tabs\\\">\\r\\n    <a class=\\\"navbar-brand\\\" routerLink = \\\"/home\\\">Happierday</a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarTogglerDemo01\\\" aria-controls=\\\"navbarTogglerDemo01\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarTogglerDemo01\\\">\\r\\n        <ul class=\\\"nav justify-content-end mr-auto\\\">\\r\\n            <li class=\\\"nav-item \\\"  routerLinkActive = \\\"active\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\r\\n                <a class=\\\"nav-link\\\"  routerLink = \\\"/\\\">Home</a>\\r\\n            </li>\\r\\n        </ul>\\r\\n        <ul class=\\\"nav justify-content-end\\\">\\r\\n            <li class=\\\"nav-item \\\"  *ngIf= \\\"!authService.loggedIn()\\\" routerLinkActive = \\\"active\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\r\\n                <a class=\\\"nav-link\\\" routerLink = \\\"/login\\\">Login</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item \\\" *ngIf= \\\"!authService.loggedIn()\\\" routerLinkActive = \\\"active\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\r\\n                <a class=\\\"nav-link\\\" routerLink = \\\"/signup\\\">Signup</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item \\\"  *ngIf= \\\"authService.loggedIn()\\\" routerLinkActive = \\\"active\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\r\\n                <a class=\\\"nav-link\\\" routerLink = \\\"/profile/{{authService.username}}\\\">{{authService.username}}</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item \\\"  *ngIf= \\\"authService.loggedIn()\\\" routerLinkActive = \\\"active\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\r\\n                <a class=\\\"nav-link\\\" routerLink = \\\"/logout\\\" (click)=\\\"onLogOut()\\\" >Logout</a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/happierday/client/src/app/components/navbar/navbar.component.html\n// module id = ../../../../../src/app/components/navbar/navbar.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-navbar',\r\n    templateUrl: './navbar.component.html',\r\n    styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n    username;\r\n    constructor(\r\n        private authService: AuthService,\r\n        private router: Router\r\n    ) {}\r\n    \r\n    \r\n    ngOnInit() {\r\n    }\r\n\r\n    onLogOut(){\r\n        this.authService.logOut();\r\n        setTimeout(() => {\r\n            location.reload();\r\n            this.router.navigate(['/home']);\r\n        }, 1000);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/happierday/client/src/app/components/navbar/navbar.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#message{\\r\\n    text-align: center\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/happierday/client/src/app/components/new-post/new-post.component.css\n// module id = ../../../../../src/app/components/new-post/new-post.component.css\n// module chunks = main","module.exports = \"<div id=\\\"newPost\\\">\\r\\n    <div class = \\\"jumbotron\\\">\\r\\n\\r\\n        <div class = \\\"row  show-hide-message\\\">\\r\\n            <div [ngClass] =\\\"messageClass\\\">\\r\\n                {{ message }}\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"authService.loggedIn()\\\">\\r\\n            <form [formGroup] = \\\"postForm\\\" (submit) = \\\"createNewPost()\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"title\\\">Title</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName = \\\"title\\\">\\r\\n                    <div *ngIf=\\\"postForm.controls.title.errors && postForm.controls.title.dirty\\\" class=\\\"alert alert-danger\\\">\\r\\n                        <div *ngIf=\\\"postForm.controls.title.errors?.required\\\">\\r\\n                            Title is required.\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"postForm.controls.title.errors?.minlength && !postForm.controls.title.errors?.required\\\">\\r\\n                            Title should have at least 5 characters.\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"postForm.controls.title.errors?.maxlength && !postForm.controls.title.errors?.required\\\">\\r\\n                            Title should not exceed 50 characters long.\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <label for=\\\"content\\\">What you want to post</label>\\r\\n                    <textarea class=\\\"form-control\\\"rows=\\\"5\\\" formControlName = \\\"content\\\"></textarea>\\r\\n                    <div *ngIf=\\\"postForm.controls.content.errors && postForm.controls.content.dirty\\\" class=\\\"alert alert-danger\\\">\\r\\n                        <div *ngIf=\\\"postForm.controls.content.errors?.required\\\">\\r\\n                            Content is required.\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"postForm.controls.content.errors?.minlength && !postForm.controls.content.errors?.required\\\">\\r\\n                            Post should have at least 50 characters.\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"postForm.controls.content.errors?.maxlength && !postForm.controls.content.errors?.required\\\">\\r\\n                            Post should not exceed 5000 characters long.\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <p>Character Left: {{5000-postForm.get('content').value.length}}</p>\\r\\n                <button type=\\\"submit\\\" [disabled] = \\\"postForm.controls.content.errors || (!postForm.controls.content.dirty && !postForm.controls.title.dirty) \\\"class=\\\"btn btn-success\\\">Post</button>\\r\\n            </form>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!authService.loggedIn()\\\" id = \\\"message\\\">\\r\\n            Oops. It seems like you didn't log in.\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/happierday/client/src/app/components/new-post/new-post.component.html\n// module id = ../../../../../src/app/components/new-post/new-post.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl, FormGroup, FormBuilder , Validators} from '@angular/forms';\r\nimport { AuthService } from '../../services/auth/auth.service';\r\nimport { NewPostService } from '../../services/newPost/new-post.service';\r\n\r\n@Component({\r\n  selector: 'app-new-post',\r\n  templateUrl: './new-post.component.html',\r\n  styleUrls: ['./new-post.component.css']\r\n})\r\nexport class NewPostComponent implements OnInit {\r\n\r\n    loggedIn;\r\n    postForm;\r\n    response;\r\n    message;\r\n    messageClass;\r\n    jokes;\r\n    constructor(\r\n        private router: Router,\r\n        private formBuilder: FormBuilder,\r\n        private authService: AuthService,\r\n        private newPostService: NewPostService\r\n    ) { this.createForm() }\r\n    \r\n    ngOnInit() {\r\n    }\r\n\r\n    createForm(){\r\n        this.postForm = this.formBuilder.group({\r\n            title: ['',Validators.compose([\r\n                Validators.required,\r\n                Validators.minLength(5),\r\n                Validators.maxLength(50)\r\n            ])],\r\n            content: ['',Validators.compose([\r\n                Validators.required,\r\n                Validators.minLength(50),\r\n                Validators.maxLength(5000)\r\n            ])]\r\n        })\r\n    }\r\n\r\n    createNewPost(){\r\n        const form = {\r\n            title: this.postForm.get('title').value,\r\n            content: this.postForm.get('content').value,\r\n            username: localStorage.getItem('username')\r\n        }\r\n        this.newPostService.newPost(form).subscribe(res => {\r\n            console.log(res);\r\n            this.response = JSON.parse(JSON.stringify(res));\r\n            this.message = this.response.message;\r\n            if(this.response.success){\r\n                this.messageClass = 'alert alert-success';\r\n                setTimeout(() => {\r\n                    this.router.navigate(['/home']);\r\n                }, 1000);    \r\n            }else{\r\n                this.messageClass = 'alert alert-danger'\r\n            }\r\n        })     \r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/happierday/client/src/app/components/new-post/new-post.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/happierday/client/src/app/components/profile/profile.component.css\n// module id = ../../../../../src/app/components/profile/profile.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"jumbotron\\\">\\r\\n        <h1 class = \\\"page-header\\\">profile</h1>\\r\\n            <p>username: {{username}}</p>\\r\\n            <p>Email: {{email}}</p>\\r\\n        <div *ngIf=\\\"authStatus\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Edit</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\">Delete Account</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/happierday/client/src/app/components/profile/profile.component.html\n// module id = ../../../../../src/app/components/profile/profile.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ProfileService } from '../../services/profile/profile.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n    username;\r\n    email;\r\n    result;\r\n    authStatus;\r\n    constructor(\r\n        private profileService: ProfileService,\r\n        private router: Router\r\n    ) { }\r\n    \r\n    ngOnInit() {\r\n        this.profileService.getProfile(this.router.url.split('/')[2]).subscribe(res => {\r\n            this.result = JSON.parse(JSON.stringify(res));\r\n            this.authStatus = this.result.auth;\r\n            this.email = this.result.email;\r\n            this.username = this.result.username;\r\n        }) \r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/happierday/client/src/app/components/profile/profile.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/happierday/client/src/app/components/register/register.component.css\n// module id = ../../../../../src/app/components/register/register.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"jumbotron\\\">\\r\\n        <h1 class= \\\"page-header\\\">Sign up</h1>\\r\\n\\r\\n        <div class = \\\"row  show-hide-message\\\">\\r\\n            <div [ngClass] =\\\"messageClass\\\">\\r\\n                {{ message }}\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <form [formGroup] = \\\"userForm\\\" (submit) = \\\"onRegisterSubmit()\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"username\\\" >Username</label>\\r\\n                <input type=\\\"text\\\"  id=\\\"username\\\" class=\\\"form-control\\\"  placeholder=\\\"username\\\" formControlName=\\\"username\\\"\\r\\n                [ngClass]=\\\"{'is-invalid':userForm.controls.username.errors&&userForm.controls.username.dirty,'is-valid':!userForm.controls.username.errors}\\\">\\r\\n                <div *ngIf=\\\"(userForm.controls.username.errors && userForm.controls.username.dirty)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"userForm.controls.username.errors?.required\\\">\\r\\n                        Userame is required.\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"userForm.controls.username.errors?.minlength && !userForm.controls.username.errors?.required\\\">\\r\\n                        Userame must have at least 5 characters.\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"userForm.controls.username.errors?.maxlength && !userForm.controls.username.errors?.required\\\">\\r\\n                        Userame must be no longer than 20 characters.\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"userForm.controls.username.errors?.validateUsername && !userForm.controls.username.errors?.required\\\">\\r\\n                        Username should not contain any special characters.\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"email\\\">Email</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\"  placeholder=\\\"email\\\" formControlName=\\\"email\\\"\\r\\n                [ngClass]=\\\"{'is-invalid':userForm.controls.email.errors&&userForm.controls.email.dirty,'is-valid':!userForm.controls.email.errors}\\\">\\r\\n                <div *ngIf=\\\"userForm.controls.email.errors && userForm.controls.email.dirty\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"userForm.controls.email.errors?.required\\\">\\r\\n                        Email is required.\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"userForm.controls.email.errors?.minlength && !userForm.controls.email.errors?.required\\\">\\r\\n                        Email must have at least 10 characters.\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"userForm.controls.email.errors?.maxlength && !userForm.controls.email.errors?.required\\\" >\\r\\n                        Email is too long.\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"userForm.controls.email.errors?.validateEmail && !userForm.controls.email.errors?.required\\\">\\r\\n                        Must be a valid email.\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"password\\\">Password</label>\\r\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\"   placeholder=\\\"password\\\" formControlName=\\\"password\\\"\\r\\n                [ngClass]=\\\"{'is-invalid':userForm.controls.password.errors&&userForm.controls.password.dirty,'is-valid':!userForm.controls.password.errors}\\\">\\r\\n                <div *ngIf=\\\"userForm.controls.password.errors && userForm.controls.password.dirty\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"userForm.controls.password.errors?.required\\\">\\r\\n                        Password is required.\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"userForm.controls.password.errors?.minlength && !userForm.controls.password.errors?.required\\\">\\r\\n                        Password must have at least 8 characters.\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"userForm.controls.password.errors?.validatePassword && !userForm.controls.password.errors?.required\\\">\\r\\n                        Password should contain at least one lower,upper case and number.\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"confirmPassword\\\">Confirm Password</label>\\r\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"confirmPassword\\\"  placeholder=\\\"confirmPassword\\\" formControlName=\\\"confirmPassword\\\"\\r\\n                [ngClass]=\\\"{'is-invalid':(userForm.controls.confirmPassword.errors || userForm.errors) &&userForm.controls.confirmPassword.dirty,'is-valid':!userForm.controls.confirmPassword.errors && !userForm.errors}\\\">\\r\\n                <div *ngIf=\\\"userForm.controls.confirmPassword.dirty && userForm.errors\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"userForm.controls.confirmPassword.errors?.required\\\">\\r\\n                        Confirm Password is required.\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"!userForm.controls.confirmPassword.errors?.required && userForm.errors?.matchPassword\\\">\\r\\n                        Password doesn't match.\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <button [disabled] = \\\"!userForm.valid || signedUp\\\" type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/happierday/client/src/app/components/register/register.component.html\n// module id = ../../../../../src/app/components/register/register.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder , Validators} from '@angular/forms';\r\nimport { SignUpService } from '../../services/signup/signup.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-register',\r\n    templateUrl: './register.component.html',\r\n    styleUrls: ['./register.component.css']\r\n})\r\n\r\nexport class RegisterComponent implements OnInit {\r\n    userForm: FormGroup;\r\n    signedUp;\r\n    registerResponse;\r\n    message;\r\n    messageClass;\r\n    emailResponse;\r\n    emailMessage;\r\n    emailStatus;\r\n    usernameResponse;\r\n    usernameMessage;\r\n    usernameStatus;\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private signUpService: SignUpService,\r\n        private router: Router\r\n    ) { \r\n        this.signedUp = false;\r\n        this.createForm();\r\n    }\r\n\r\n    createForm(){\r\n        this.userForm = this.formBuilder.group({\r\n            username: ['', Validators.compose([\r\n                Validators.required,\r\n                Validators.minLength(5),\r\n                Validators.maxLength(20),\r\n                this.validateUsername\r\n            ])],\r\n            email: ['', Validators.compose([\r\n                Validators.required,\r\n                Validators.minLength(10),\r\n                Validators.maxLength(50),\r\n                this.validateEmail\r\n            ])],\r\n            password: ['', Validators.compose([\r\n                Validators.required,\r\n                Validators.minLength(8),\r\n                this.validatePassword\r\n            ])],\r\n            confirmPassword: ['', Validators.required\r\n            ]\r\n        },{validator:this.matchPassword('password','confirmPassword')});\r\n    }\r\n\r\n    //disable/enable forms\r\n    disableForm(){\r\n        this.userForm.controls['username'].disable();\r\n        this.userForm.controls['email'].disable();\r\n        this.userForm.controls['password'].disable();\r\n        this.userForm.controls['confirmPassword'].disable();\r\n    }\r\n\r\n    enableForm(){\r\n        this.userForm.controls['username'].enable();\r\n        this.userForm.controls['email'].enable();\r\n        this.userForm.controls['password'].enable();\r\n        this.userForm.controls['confirmPassword'].enable();\r\n    }\r\n\r\n    //validate user inputs\r\n    validateEmail(controls){\r\n        const regExp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\r\n        if(regExp.test(controls.value)){\r\n            return null;\r\n        }else{\r\n            return {'validateEmail':true}\r\n        }\r\n    }\r\n\r\n    validatePassword(controls){\r\n        const regExp = new RegExp(/^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9!@#$%^&*]+$/);\r\n        if(regExp.test(controls.value)){\r\n            return null;\r\n        }else{\r\n            return {'validatePassword':true}\r\n        }\r\n    }\r\n\r\n    validateUsername(controls){\r\n        const regExp = new RegExp(/^[a-zA-Z0-9]+$/);\r\n        if(regExp.test(controls.value)){\r\n            return null;\r\n        }else{\r\n            return {'validateUsername':true}\r\n        }\r\n    }\r\n\r\n    matchPassword(password,confirmPassword){\r\n        return  (group: FormGroup) =>{\r\n            if(group.controls[password].value && group.controls[password].value){\r\n                if(group.controls[password].value  === group.controls[confirmPassword].value){\r\n                    return null;\r\n                }else{\r\n                    return {'matchPassword': true};\r\n                }\r\n            }else {\r\n                return {'matchPassword': true};\r\n            }\r\n        }\r\n    }\r\n\r\n    onRegisterSubmit(){\r\n        this.signedUp = true;\r\n        this.disableForm();\r\n        const user = {\r\n            username: this.userForm.get('username').value,\r\n            email: this.userForm.get('email').value,\r\n            password: this.userForm.get('password').value\r\n        }\r\n        this.signUpService.registerUser(user).subscribe(res => {\r\n            this.registerResponse = JSON.parse(JSON.stringify(res));\r\n            if(this.registerResponse.success){\r\n                this.messageClass = 'alert alert-success';\r\n                localStorage.setItem('hash',this.registerResponse.hash);\r\n            }else{\r\n                this.messageClass = 'alert alert-danger';\r\n                this.signedUp = false;\r\n                this.enableForm();\r\n            }\r\n            this.message = this.registerResponse.message;\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/happierday/client/src/app/components/register/register.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/happierday/client/src/app/components/verify/verify.component.css\n// module id = ../../../../../src/app/components/verify/verify.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"jumbotron\\\">\\r\\n        <h1 class= \\\"page-header\\\">Verify</h1>\\r\\n        <div class = \\\"row  show-hide-message\\\">\\r\\n            <div [ngClass] =\\\"messageClass\\\">\\r\\n                {{ message }}\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/happierday/client/src/app/components/verify/verify.component.html\n// module id = ../../../../../src/app/components/verify/verify.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { SignUpService } from '../../services/signup/signup.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-verify',\r\n  templateUrl: './verify.component.html',\r\n  styleUrls: ['./verify.component.css']\r\n})\r\nexport class VerifyComponent implements OnInit {\r\n    response;\r\n    message;\r\n    messageClass;\r\n    constructor(\r\n        private router: Router,\r\n        private signUpService: SignUpService\r\n    ) { this.verify(); }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    verify(){\r\n        this.signUpService.verifyUser(localStorage.getItem('hash')).subscribe(res => {\r\n            \r\n            this.response = JSON.parse(JSON.stringify(res));\r\n            this.message = this.response.message;\r\n            if(this.response.success){\r\n                this.signUpService.storeUser(this.response.token,this.response.username);\r\n                localStorage.removeItem('hash');\r\n                this.messageClass = 'alert alert-success';\r\n                setTimeout(() => {\r\n                    location.reload();\r\n                    this.router.navigate(['/home']);                    \r\n                },2000);\r\n            }else{\r\n                this.messageClass = 'alert alert-danger';\r\n            }\r\n        })\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/happierday/client/src/app/components/verify/verify.component.ts","import { Injectable }       from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot }  from '@angular/router';\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n    logedIn;\r\n    redirectUrl;\r\n    constructor(private router: Router) {}\r\n    canActivate(\r\n        router: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot\r\n    ) {\r\n        if(localStorage.getItem('token')){\r\n            return true;\r\n        }else{\r\n            if(localStorage.getItem('username')){\r\n                this.redirectUrl = undefined;\r\n            }else{\r\n                this.redirectUrl = state.url;\r\n                this.router.navigate(['/login']);\r\n            }  \r\n            return false;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/happierday/client/src/app/services/auth/auth-guard.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpRequest, HttpHeaders } from '@angular/common/http';\r\nimport { tokenNotExpired } from 'angular2-jwt';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n    header;\r\n    username;\r\n    serverDomain = \"https://happierday.herokuapp.com\";\r\n    constructor(\r\n        private http: HttpClient,\r\n    ) { }\r\n    authUser(){\r\n        this.header = new HttpHeaders({\r\n            'content-Type': 'application/json',\r\n            'authtoken': localStorage.getItem('token')\r\n        });\r\n    }\r\n    \r\n    storeUser(token,username){\r\n        localStorage.setItem('token',token);\r\n        localStorage.setItem('username',username);\r\n    }\r\n\r\n    loggedIn(){\r\n        if(tokenNotExpired()){\r\n            this.username = localStorage.getItem('username');\r\n            return true;\r\n        }else{\r\n            this.username = undefined;\r\n            return false;\r\n        }\r\n    }\r\n\r\n    logOut(){\r\n        this.username = undefined;\r\n        localStorage.clear();\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/happierday/client/src/app/services/auth/auth.service.ts","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router }  from '@angular/router';\r\n\r\n@Injectable()\r\nexport class NonauthService {\r\n    constructor(private router: Router) {}\r\n    canActivate() {\r\n        if(localStorage.getItem('token')){\r\n            this.router.navigate(['/']);\r\n            return false;\r\n        }else{\r\n            return true;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/happierday/client/src/app/services/auth/nonauth.service.ts","import { Injectable } from '@angular/core';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { HttpClient, HttpRequest, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class JokesService {\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private http: HttpClient\r\n    ) { }\r\n\r\n    getJokes(){\r\n        return this.http.get(this.authService.serverDomain + '/home');\r\n    }\r\n\r\n    getJokeDetail(title){\r\n        if(this.authService.loggedIn()){\r\n            this.authService.authUser();\r\n            return this.http.get(this.authService.serverDomain + '/jokes/' + title, {headers: this.authService.header});\r\n        }else{\r\n            return this.http.get(this.authService.serverDomain + '/jokes/' + title);\r\n        }   \r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/happierday/client/src/app/services/jokes/jokes.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n    constructor(\r\n        private http: HttpClient,\r\n        private authService: AuthService\r\n    ) { }\r\n\r\n    Login(user){\r\n        return this.http.post(this.authService.serverDomain+'/login',user);\r\n    }\r\n\r\n    storeUser(token,username){\r\n        this.authService.storeUser(token,username);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/happierday/client/src/app/services/login/login.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Injectable()\r\nexport class NewPostService {\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private authService:  AuthService\r\n    ) { }\r\n\r\n    newPost(form){\r\n        this.authService.authUser();\r\n        return this.http.post(this.authService.serverDomain + '/newpost',form,{headers: this.authService.header});\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/happierday/client/src/app/services/newPost/new-post.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from '../auth/auth.service';\r\n@Injectable()\r\nexport class ProfileService {\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private authService: AuthService\r\n    ) { }\r\n\r\n    getProfile(username){\r\n        if(this.authService.loggedIn()){\r\n            this.authService.authUser();\r\n            return this.http.get(this.authService.serverDomain + '/profile/'+ username, {headers:this.authService.header});\r\n        }else{\r\n            return this.http.get(this.authService.serverDomain + '/profile/'+ username);\r\n        }\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/happierday/client/src/app/services/profile/profile.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from '../auth/auth.service';\r\n@Injectable()\r\nexport class SignUpService {\r\n    url;\r\n    constructor(\r\n        private http: HttpClient,\r\n        private authService: AuthService\r\n    ) { \r\n    }\r\n\r\n    registerUser(user){\r\n        return this.http.post(this.authService.serverDomain+'/signup',user);\r\n    }\r\n\r\n    verifyUser(id){\r\n        this.url = this.authService.serverDomain + '/verify/' + id;\r\n        return this.http.get(this.url);\r\n    }\r\n\r\n    storeUser(token,username){\r\n        this.authService.storeUser(token,username);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/happierday/client/src/app/services/signup/signup.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// D:/happierday/client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// D:/happierday/client/src/main.ts"],"sourceRoot":"webpack:///"}